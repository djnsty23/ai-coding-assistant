hey everybody today I wanted to show you how you could build a full stack application using cursor and how you can actually deploy it so that it can be used out in the real world the product I'm going to be building is going to be a survey platform it's going to allow you to design surveys with various different question types and then send those surveys out to collect feedback I'll also have an analytics dashboard that will allow you to do some basic analysis on the responses that you get in response to the survey I wanted to make this video to show how cursor can really be used to build a full stack application now the project did take me 5 hours to complete and when I put the video together I just cut out a lot of moments where I was just sitting there thinking to myself or I was typing the prompts but you'll still be able to see all of the prompts in their complete form in the video so before we dive in let's just take a look at the tech stack and the product requirements that I'm going to be building towards of course we'll be building using cursor and Claude Sonet 3.5 which which I believe is the best AI model for coding that is available right now we're going to be using the M Stack Express reacted node.js so that we have JavaScript full stack this is going to make it easier coordinating changes across files and I won't have to be mentally switching between different languages the whole time additionally because we're using AI it understands JavaScript very well because there are so many examples that it's actually been trained on so I found this to be a really effective stack to work with we're going to be using as the database because we're going to have very custom and flexible document structures here so it doesn't really fit very well into a SQL database and I think is going to serve our purpose here well in terms of some of the other software I'm going to be trying out cloudflare Pages I've previously used Google Firebase hosting to host my websites but I did notice that cloudflare Pages seems to have an unbeatable deal for hosting look at this for $0 you get unlimited bandwidth and unlimited websites that you could host on cloud flare pages I mean it honestly seems a little too good to be true so I'm going to try it out and we'll see how it works but keep in mind that's really only the front end that's going to be hosted by cloudflare Pages we're still going to need a server to collect our responses and put them in the database so for the back end I'm going to stick with Google app engine which is a pretty scalable system and you can actually cap the amount of usage the amount of instances that are spun up to handle requests so you're not going to blow up your cost like you would in a serverless sort of situation keep in mind that there are easier ways to actually deploy your software but they will come with higher costs and potentially being locked into other clouds and things like that so the approach that I'm taking is going to be a balance of scalability price and ease of setup I'm going to be using Firebase o because I've just found that to be the simplest and most straightforward o solution and it comes with with a bunch of those you know login with Google and apple and all the other things so I found that to be pretty smooth but if you've used a different off solution uh let me know in the comments because I'd love to try something new out as well finally I'm going to be using GitHub and this is pretty much just to keep track of my code make sure everything gets saved and if I have some big cursor compose query that I want to make uh I can make it and then roll back the changes if something goes terribly wrong okay so that's the text stack now let's take a look at the product requirements we're going to build a survey platform like I said so we're going to have authentication throughout this whole thing because we want people to be able to see the surveys that they designed and not just all the surveys that have been created on the platform so we're going to have login and and users we're going to have the ability to create surveys which will have a variety of different question types of course we're going to need a way to send out a link so that we can collect responses and and then we're going to have an analytics dashboard with some customized charts that are based on the questions that you actually have in your survey okay so first let's go ahead and set everything up so let's start with picking a domain name for our website and I'm going to be trying the cloud flare registar here since I am going to be using Cloud flare pages so hopefully that minimizes the amount of DNS configuration that I have to do when I actually deploy the site let's see magic survey maybe something like that survey mage hey look at that survey Mage tocom is actually available is that a good name I don't know yeah I think I'll just go with survey Mage I mean it sounds fine I wanted it to have kind of a magic feel to it all right here we go great so we got survey Mage let's see we'll add pages site and this is going to be where we deploy it eventually on cloudflare pages but we're going to use the CLI which is the command line to deploy to it so we'll not worry about this for now but we got the domain name all right then I'll head over to GitHub we'll create a new private repository survey Mage here all right and I like to create the repo I always put the UI and the back end in the same repo and for some of the newer developers GitHub is a Version Control System basically it's just a fancy way of saying that you can save your code to the cloud and it also when you get into a situation where you have multiple Developers it makes it really convenient to figure out how you can merge your code together without running into Conflict for me I'm just going to be the only person working on this but I like to have it as a way to save my work so that it's not only on my local computer okay so I have this repo created let's go to GitHub on my desktop and we're going to clone that repo to be local so we're going to go ahead and clone that repo all right now that's going to create a folder on my computer and this is GitHub desktop you can download it on their website okay now we're finally going to open up cursor and I'm going to open a folder okay we'll pick survey Mage all right here we are a completely blank project and now I'm going to do two things I like to create a server folder and then I like to use create react app to create my front end so we got server Now to create my react repository I'm going to go over to terminal new terminal and for newer folks this is just a way to directly tell your computer what it needs to do so in my case I'm going to go create react app and I'll create a UI uh folder with this create react app command and this is also actually initiating the react project so I'll be able to iterate from there while that's working working let's go over into the server I'm going to actually open another terminal window here we'll go to the server and we're going to do npm and knit this is going to create a node project inside of here so just call it server all right and then I'll just create an index.js this is going to be my server so just to demonstrate this simply right we're going to have a UI it's talking to the API which is a part of the server and there's going to be other backend logic in there and that's going to talk to our database which is going to be okay so if we go back here we see the UI folder is all filled out now the react project is created and now we can do npm start and that's going to start our react app all right there we go okay so as a part of this video I was actually planning to demonstrate using v0 by versel uh to to work with cursor and to show how I could move things in and out pretty easily but funny enough this was actually my first time using VZ and I got stuck with some dependencies and Shad CN and needing to switch the typescript so I'm just going to put that aside for now so that I could finish this video and make it the way that I've been making apps with plain cursor but I'll go back at some point and give VZ another try probably figure out what to do to set it up and then I could actually show a video uh showing how those two tools can work together but when I was trying to do it for this video it just didn't really work out but for now let's go ahead and just build it uh directly with react and JavaScript all right so we got our react app I'm going to go ahead and start designing some of the components uh specifically around the survey questions so we'll go ahead and open up the chat that's crl L and we're going to go to appjs and we will give a description to cursor of what we want to do with this project and then get it started on some of the smaller tasks that are going to be reasonable for it to handle okay so my prompt is I am building a survey design tool please create a component that will be called survey designer it should include new question designer and question preview components in it question designer component should have four options for question types and then allow the user to add or remove options and add the question to the survey so that we see it in the question preview the four initial question types will be multiple choice checkbox list short text and long text I could use cursor compose to do this but I found it doesn't always fill out the files with all the details that it needs to have so I still prefer to just use the sidebar chat to do this sort of thing create new folder here components so it looks like you know we're going to update appjs that's fine control enter to accept all the changes um I'm really hoping to get a create new file button here but right now we still have to create files manually unless you use cursor compose so survey designer okay okay we got our question designer and the question preview okay okay so right now we got this huge header and down here we have um some okay we can choose all right let's style all of this using Tailwind let's style all of this using tailwind and use luced react icons when needed please tell me any dependencies I need to add so this is going to go and update those files so Tailwind is the approach we're going to take to CSS basically it makes it so that class names and HTML tags are going to apply a certain style to the components that you create so we're going to install these dependencies so we can actually use Tailwind in our project okay we'll run oh whoops we installed that in the wrong folder we need to make sure we're doing this in the UI folder okay then we're going to run npx Tailwind CSS and knit awesome we'll add this to here appjs I got a couple of changes there that's cool and this is the way that I like to work with cursor is I'll just have this chat in the sidebar and I just go file by file that way I can actually see the changes that it's making and in this case I'm just accepting them as we go and I'll kind of refine all of it after I get the whole thing working so first get it working and then make it pretty okay so flipping back all right um Let me refresh still doesn't look like we're using Tailwind here maybe this needs to go at the top let me try restarting this maybe okay so let's see what's going on here I'm going to use the image capabilities of cursor to see what is going on see I'm just going to basically ask it to make it look better and I'm showing it the image so we'll see the issue might be related to how we're importing Tailwind um but I'm just going to see if we can yeah maybe if it adds some padding maybe we'll see this more clearly okay that doesn't really change anything I don't think we are I don't think Tailwind is working properly okay I'm just going to say please check to see if Tailwind is being used properly the style classes seem to be ignored and I'm going to use the whole code base um so we'll see what it has to say okay our Tailwind Project's not configured correctly okay content array is empty okay here we go oh look at that it that immediately made a huge difference hey this actually looks really nice now okay fantastic so that was obviously the issue is uh we were ignoring all of our JS files uh with Tailwind first okay so now that we have this let's just try it out let's let's add a couple of questions let's say what is your name all right great and let's say me about yourself nice okay we got we got multiple questions going here let's what is your favorite ice cream flavor okay cool let's see well that's not quite right so we'll work on that multiple choice option let's see what the checklist checkbox list looks like okay okay cool okay so we're able to add questions to this survey let's see if I I try to type something it doesn't actually let me type uh so let's go back to cursor and we're going to get it this list of feedback on things that we wanted to change and we'll go from there okay so the main problem seems to be in question preview and I'm going to tag specific files where I'm doing this okay we're basically going to tell it the problems that we're seeing and ask it to update it to work as expected and it can kind of connect the dots on these sort of things so looks like it's adding a handle input change that's nice there's a lot more Logic for these various question types all right let's go ahead and apply these changes and see what that looks like okay there we go hey look at that amazing amazing this is exactly what we wanted excellent okay let's actually rename this to survey preview because that's essentially what we're doing here survey preview I'm just double clicking on that function name and cursor already knows that I want to rename it so I can just press Tab and here all right there we go let's go to the survey designer and make this kind of full screen so that we have the question designer on the left and then the survey kind of taking up the 2/3 to the right also I want to make it so that when we scroll down the survey preview Scrolls but question designer stays sticky so that we can always see the new question config uh I am bundling a few different requirements here but I found that with Sonet 35 cursor is able to actually work with that and it delivers some pretty good results all right so there's some changes here I think that's the only place it needed to make changes okay fantastic okay so that looks better but I kind of don't want these okay I'm going to go back here I think there is some issue with this header and then yeah we have different widths remove the header and make it full width all here all right pretty simple okay amazing that's that's what we want for now okay multiple choice okay I just want to add a few more questions here okay and it looks like it's scrolling down which is really great that's what we wanted um so it's going down on the survey and this is giving us a pretty good preview of what the survey is going to look like okay I don't want this type here I also want to be able to move these survey questions around to change the order and I want to be able to delete them so let's go ahead and go over to the survey preview and give it that list of changes okay so we're going to add some drag and drop and then and we'll be able to delete questions with a um trash icon in the top right and finally we'll remove the question type text okay so here we go there's a bunch of changes apply that accept all okay we're going to need some new uh libraries that we install okay we're in the UI here we go o oh actually I don't want react icons um please use seed icons but we will go ahead and install this drag and drop Library okay there we go the seed all right okay so those don't look too pretty that's not really what I had in mind um let's see okay cannot find droppable Entity with ID we're probably going to have to add okay I'm going to just paste the error and we'll see if it can figure out what is wrong it's it's probably because it's receiving the questions as a prop and then it's trying to shuffle those questions but let's see it has some yeah it's still it's still an issue I'm going to give it a little hint okay it thinks I'm right but we'll see if I'm actually right yeah so we're going to use local questions instead yeah that looks great okay I'm still having this same issue and when I run into the same issue for you know a few minutes like this I'll often just pause and take a look at the code because you can easily get really carried away just asking the llm over and over and over and it'll just regenerate code and get confused um maybe I could also open a new chat and try that out um but it often helps to try to understand what is actually happening here let me look up that Library react beautiful DND yeah I mean that should look real nice if we can get that to work I'm going to actually since I just went to the documentation for this Library I'm going to take this code that they have in this example and just give it to cursor and see if that could help it figure out what's wrong okay paste a bunch of code okay and let's see if we can update the component to work in the same way okay still a problem just trying to restart the app maybe see if it was some issue with the installation of the library nope still problem let me look that up just remove the react strict mode well I don't really want to do that okay let's see if I remove strict mode Let's see if that helps oh look at that it actually does it's kind of funny okay yeah we also needed to update the parent component to add the question change okay hey look at this okay okay so I don't really want to remove strict mode but this other answer seems to offer an alternative way and now we actually know that it has something to do with strict mode for some reason so let's go back to the component we'll say all right we'll say here's some code you know can you use that okay strict mode droppable JS in a utils folder let's go ahead and add new folder utils strict mode dropable all right back to survey preview we'll apply those changes see if that strict mode droppable works yes it does okay look at that that looks really good and again still on question change is is a problem so I'll just go ahead and say let's make sure also to avoid any recursive Loops because if it updates the parent and then the parent updates the the props and that Updates this one you know we could potentially get in a big loop so I just asked it to avoid that issue all right here we go now we can actually properly rearrange these questions great okay now we made a lot of changes in this survey preview to add all the drag and drop and I'm just a little worried it might have added some code that's unnecessary so I'm just going to do a little bit of cleanup and I'll just say added we'll just basically ask it to clean up any code okay so that's a really minimal change there I I don't even know what it's doing there though uh I don't I don't actually like that refactor I'm going to avoid it so there wasn't really much that it cleaned uh we'll just leave that alone okay let's extract the specific question to uh okay let's extract that into a question preview component cuz this file is already 150 lines long I like to keep files you know a hundred lines or so I find that when it gets to be multiple hundreds of lines cursor does have a harder time processing that much context when you tag things so I try to just be proactive in my refactoring okay yep we're removing a bunch of code great let's just refresh all right does it still work yes okay that works okay cool let's see if the question deletion Works yep it does amazing okay all right so let's uh let's clean up the styling here a little bit I just want this to be all the way on the left I want to add some more padding okay we'll add padding around the whole question and then we'll put the grabbable icon to the left um I don't want a hamburger menu oh it looks like I was using the wrong file huh that makes a lot of sense okay so just be careful with that keep in mind the context that you're submitting I was looking at this survey preview I should have been on the new question preview let me just go ahead and start over and uh I'll go to the history okay I want to ask that question whoa and let's undo those changes okay control enter that's back to what we had okay no no no no no not in survey preview whoops I did it again again question preview yeah that looks a bit cleaner all right here we go that's that's actually what I want okay awesome so I got a this this question designer looks pretty good to me oh did you see that that is super weird when I rearranged the these look at the values the questions get changed but the values stay in their location that's a pretty funny bug um let's go ahead and fix that okay so question preview and Survey preview as well okay so we got survey designer question preview survey preview we [Music] will modify all the files that we need to okay in survey preview go we're going to fix the answers oh okay that was the only one we we needed to do okay there we go now it works as expected okay so at this point I have this survey designer looking kind of like I want it I mean there's definitely features that I could add like adding questions in between questions making it responsive more question types but this is roughly what I was looking for so let's go ahead and try to make it a full application then we can flush out all the details and additional features later now let's go ahead and add authentication and login so that we can actually save this survey and then see it in a list of surveys that we've previously designed and then we could also analyze the results for those surveys we're going to be using Firebase o so I'm going to go to Firebase and create a new project here create a project survey Mage let's see if that's available it's already taken survey Mage one sure actually we don't even need Google analytics all right we create the project what Firebase is going to allow us to do is use the off functionality to make it so that our users are managed by Google and authenticated by Google and all of the email interactions and stuff is sent by Google so we just don't have to worry about that and Firebase o has a very generous free tier so I found it to be a good solution but I'd love to hear about some alternative options I could try so we'll get started we will have Anonymous enabled and we'll also have email and password and I also want to have sign in with Google which is going to require us to add a support email for the project okay so we got our providers configured and now we're going to have to add it to our project let me see I'm trying to remember where to I'm also going to add ser m.com as an authorized domain and this is something that is easy to forget to do um that way when I do deploy it to my actual website it's going to be able to accept the users there as well I'm having a hard time finding the public keys so I think I might have to create an app here Firebase app okay yeah so we're going to add this web app register we're not going to use Firebase hosting because we're going to try out cloudflare pages okay and then there okay so there's our uh public configuration which we'll post paste into our app okay I'm going to copy that npm install install Firebase in our UI so adding Firebase to our project is going to allow us to associate a user with the particular session that they're using our app in and when any request goes to our server it's going to have a token that we can verify on the server side as well so we know which user is making what sort of request and if it's a valid user so we're not talking to our server yet but we're going to go ahead and add the ability to log in and we'll also make it so that when a user arrives on our platform for the first time they're going to log in as an anonymous user which means we don't know their email we don't really know if they're legitimate or not so I'm planning to allow Anonymous users to create surveys but not save them just to prevent any sort of abuse on our app let's go over to appjs and we will tell it about Firebase here okay I'm going to take that Firebase config paste it in here these are public keys so don't worry about seeing them here okay and we're telling cursor that we want to add Firebase off and to allow users to log in and we want like a new navbar component and a signin uh component as well okay we'll accept accept that we want a new navbar component paste that in there sign in component okay we already installed Firebase let's go back here it wants us to put in the config uh well it's not survey designer that was actually paste this stuff in there oh okay there's our Firebase config and let's go ahead and I'll just log the user as well go back to our app okay and says we're an anonymous user oh look at that little sign in thing there that's interesting okay so I think it created a component but it's just assuming that I'm logged in if I'm an anonymous user so let's change that a little bit okay giving it some more instructions basically we want to sign in if the user is logged in as an anonymous user we got some changes to [Music] navbar okay we're making it into a dialogue so that we can see it on top of of whatever components we had all right here we go sign in now we see this dialogue great let's try sign in with [Music] Google okay we'll just cancel that okay so this is a decent start but we need a few things I need to be able to get out of this if I if I click out away we need to fix this little border we need to fix this button we want to have a more consistent color scheme so let's go ahead and give it the feedback for all of those changes okay so we're going to we'll ask for all those changes okay it has some big SVG in here I'm not sure exactly what that is oh okay well that looks really nice actually okay all right yeah that looks good let's implement the following changes okay some more changes to make that look a little nicer okay that looks great at least this part does okay we also add the sign in or register logic there got a little error okay we got to yeah we got to pass the off all right sign in or register great I'm just going to sign in with Google okay Volo builds all right so I should be signed in wonder if we're logging that anywhere okay we're getting some errors let me see if I refresh I'm still signed in seemingly let me log the user okay all right so look at that we're signed in we got the the email display name great let's sign out what does it say now okay now we are an anonymous user there we go if I refresh yep I'm still that Anonymous user I'm going to sign in sign in with Volo builds okay there's some errors but it does sign me in okay so let me just see what these errors are about cuz things seem to be working but there are some errors here let's see if it knows about these errors okay it's trying to use email password when doing the Google signin got a little fix for us well kind of a bigger fix I suppose okay oh cool all right so we we can see our email now Okay cool so we can actually see a username now let's sign out okay no errors sign in sign in with Google choose my user awesome okay cool we got some of these cores I'm not exactly sure what that's about but I'm just going to leave it alone for now U bottom line is we are actually authenticated now with this UI and if we go over to and if we go over to Firebase we actually see these users now some of the anonymous ones that I've signed in as as well as my actual email okay I just want to make a quick styling change here let's go to Tailwind okay let's make it uh let's give ourselves a little bit of a theme and then we're going to use that color in all of the UI elements that we've built so far okay that's looking pretty nice I sign out sign in I don't really want it to be in the header like that but that's fine just want that to be black the add option we change that to custom blue and if you notice I just used the auto complete there it just uh when I started when I highlighted the text it knew what I wanted to do so I started using the custom blue there okay and then in the sign in screen I think had one other yeah I didn't want it here okay okay great now we got the authentication on the front end in place what we're going to do next is actually use the token that is generated by the UI to send it to our server we're going to build the server and we're going to add the functionality to save the survey that we created and it's going to be associated with our user so that the next time we open the app we're going to see the survey that we've been working on and eventually we'll create the list of surveys so that you can switch between them all right let's go to our server it is currently empty I'm going to go ahead and say please create a basic Express server we will use Firebase off to authenticate request so please add some middleware for that that's going to make sure that every request that comes to our API gets checked for the token uh and resolved to a specific user uh let's create a save survey endpoint that will receive data as seen in the survey preview to a collection we can use Mongoose Mongoose is a thirdparty library that's going to make our integration with a little bit smoother and add some data structure let me know the dependencies to install let's go to the server install the dependencies on the server side looks like it automatically added cores for us which is nice that's something that always trips people up let's make it run on Port 30001 just so we differentiate it a little bit I'm going to say this is a good start but let's do the following make it a little more formalized now if you have passed projects it can still be a lot easier to just take things that are working from those projects and use them as a boiler plate for your new project so in this case I'm actually going to go to my quiron code base and I'm going to copy paste some of these things that I know just work and you know what it suggested probably works out of the box but I think it'll uh work a lot more smoothly if I give it some code that actually works as inspiration okay and we're going to create a db.jpg so this file is going to handle all of our interactions with the database okay we'll create a EnV file this is going to store our environmental variables and we'll have to install a couple more things here please update this file to connect more in the same way this again just using a past project as inspiration okay so we just made a bunch of changes let's just review the code to make sure it actually makes sense all right so we got our app we're initializing the Firebase app we're using cores we're using body parser so that we can accept Json we have this verify token thing uh as a middleware we're using it in this end point so that means we're going to go here first we're going to check with Firebase that this is a legitimate token that got passed then we're going to take the questions from the body uh take the user ID and then we're going to store that with the save survey method now save survey is not being imported so here we go we'll import it okay we got this db. JS file but why is it not there we go there we go now it's importing it okay good okay so we got the save survey now I'm going to configure yeah I already configured I configured the environmental variables in myv file and as well as my Firebase URL I'm going to go ahead and get the survey account key uh which is going to be used server side to verify the tokens that's going to be back in Firebase okay so I'm going to go here to project settings and then service accounts and to generate new private key I'm going to save this as the service account key in my folder okay let's try to start the server up I use nodemon which just restarts the node.js server every time I make some file changes all right so we got some errors cannot find EnV okay let's go ahead and install data Envy great nodemon index okay next there cannot find module mongodb did I never install that okay and now it is working and hey look at that it actually connected to  so let's go back to the survey designer and we are going to actually call that endpoint now so to get it to talk to the server I'm going to have it create a new file that is used for all of this sort of communication that's going to attach the token to every API call that it makes it'll also help me centralize all of these API calls and and how I format the requests so it's going to be one point to work with rather than having all the API calls scattered across my codebase okay let's add a button to save survey when this is called we should call the save survey endpoint defined in index.js but we should create a new file called server comom that will make the actual API call using Fetch and by the way here's why I like to have both the front end and the back end in one repository in one language it's going to make it so much easier for the models to understand what you want and modify files across the full stack so this is really a convenient way to do it okay we got a new server com file put it in the UTS Implement your logic to get the users's off token here okay well I guess we'll have to do that we're using Firebase off so let's use that for the app token okay it's written some off token stuff here going to move that function to the top okay we're going to re abstract this a little bit so this is going to be a much cleaner way that this is implemented we're going to have this generic API request we'll be able to add the token into everything and we'll be able to Define our actual API calls very simply like this okay let's give it a try all right so we have the button here now to save a survey let's see what happens when I save this error saving forbidden okay let's see if it's made it doesn't look like it made its way to the server itself self server is running on 3001 SL API saave survey is that the end point that we have here yes okay we're basically asking it to do some troubleshooting and the way we have server Comm ranged could be improved okay okay so okay so we're not sending that Bearer prefix great and then for the verification I don't think we need any changes okay okay so let's try this again let me save survey survey saved successfully wow okay well let me double check  and we should probably have some kind of visual confirmation that it's saved so we'll add that but let's go ahead and check to see if the survey actually got saved I'm using Studio 3T and hey look there is a new collection survey Mage let's check it out sweet so it looks like our survey got saved we got the user ID here it generated a unique ID for the survey I think I'm going to go with just a plain string here though instead of the object ID and we're probably going to want to add question IDs there's probably a lot of thought that we should put into how we structure the questions and how we organize them in the database because we might want to reuse questions in different surveys we might want to change the text um so I'll have to think about all of that but for now we have this endend integration in place we're verifying the user we are storing their survey with the user ID so we should be able to start building the list of surveys and the ability to create new surveys so let's focus on that next okay so let's do a few different things here we'll move the button to the top and we'll have some sort of Animation to suggest that it actually saved and then we should have some kind of maybe a hamburger menu over here to see the various surveys that you've previously configured and then we should also add an analyze Button as well next to the save survey so that we can see what the results were that came in but we'll get to that a little bit later I'm going to go back to the code I like making lists like this with relatively simple features so that it can Implement many things at the same time if the context is close enough all right there we go that looks a little bit better all right making some additional changes here to make it so that it looks nice and clean when we actually save that survey all right cool saved I'll say nearly okay there we go now it's looking pretty perfect if I click saving saved and then it's back to save server surve awesome let's make this one just a little bit shorter there we go okay now if we look in the database every time I'm pressing that it's saving the survey as a new object so we're going to want to add a survey ID and we'll also want to you know create new survey button or something like that so that we can actually make a new one of these okay so here once again I'm making a full stack change we're going to add a survey ID and I'm going to pass it from the UI I'm going to make change here I'm going to send it to the server in the server and the database we're going to need changes to respect this new ID that we generate so this is really going to involve many files and it really helps to just tag all of them now that I think about it I actually want to generate the ID on the back end when I first create the survey so that I have more control over the primary key in my database that it's you know so it's not submitted by the client okay so we got a pretty complex quer here but we're essentially trying to add this feature across all these different files and because I keep my file sizes pretty short I think this should work in the context that cursor has okay so we got a new endpoint here okay we're using it as the primary key so that's really good adding the button in the Navar and then the survey designer we don't want the Navar in the survey designer though so I'm going to reject this change and we're going to have to tell it is it really okay so in this case we're going to have to modify actually appjs so that we have this create survey option and we're going to pass that to the Navar so that we can pass that survey ID to the design designer all right so obviously the scope was a little bit more than cursor could handle but kind of right at The Edge there okay I like that it actually added this is anonymous check still not doing anything with on new survey though we might have to start a new chat okay it's starting to get kind of confused because now it thinks I'm going to add a new button here for the new survey but I actually don't want that but I do want to set questions to you know empty when that is called okay let's just ignore that for now we might have to do a new chat this doesn't look like it's getting used so let's just let's see what happens right now okay I'm going to refresh okay let's just say okay let's say I try to save that well that's doesn't seem to work anymore I don't know why um okay let's try new survey the new survey button doesn't do anything okay clearly it was a little too much context I'm going to try to break up this task and and think through it a little bit more how we should route this okay actually look at that we are we don't have uuid defined we need to install that maybe that's the problem oh looks like we never actually imported it okay so doing stuff like that with a lot of scope or when you're trying to change a lot of files can be a little bit risky which is why I actually recommend in those cases when you're about to make some big changes across many files you should just do a git commit to essentially save your work and then you can roll back the changes that you make so that you're back to a working functional application because right now I'm in a little bit of a risky situation where you know I'm not really sure what changed or what's broken and I'm just going to have to try to figure it out now okay if I click a new survey there we go now we got you know no questions um now let's try to save it okay save saving saved okay excellent let's see if we have that survey in here somewhere now okay there it is and we see the ID is not that object ID kind of thing anymore it's actual Universal unique ID okay great now if I refresh yeah it's going to essentially I wonder what happens if I go now and try to save this okay it doesn't work because I need to click that new survey button to create a new survey so we should probably have some kind of central landing page without this uh view by default this actually makes me think that I should create a different sort of landing page here which shows me all of my surveys and then I can go edit them or I can create a new survey so I'm going to move this button out we're going to have like a landing page design here and then this view is only going to be invoked when we edit a page uh when we edit a survey or when we create a new one so we'll go to app I want to create a new survey list but as I do this I realize that like my surveys have nothing but the unique identifier right now to identify them so I think I'm going to add a title and save that as well so that when I retrieve the surveys I can show them in this list and it'll look a little bit cleaner cool making some full stack changes and again I can't save it yet so we'll get to that okay so we're going to ask it to create a new survey list component and we will show the surveys as well as a big kind of button to create new surveys that's going to replace the new survey button in the the Navar and we're also asking it to make the relevant changes in all of the other files here's our survey list component okay we're using a flag to decide which view to have going to remove the button from the nav bar add the relevant endpoint to get the surveys at the relevant database call and then make sure we can actually fetch those surveys okay okay so when we refresh this all right we got the big button but it's not retrieving all of our surveys so let's see what's wrong looks like get survey is not defined here there we go added the import hm I wonder why it is not f finding it for our user here okay and should have respond with the list of surveys check server comom I think it needs to extract that object I'm going to start a new chat to refresh the context because I had like five or six files in there and it's just going to be more accurate if I have less context okay we got some changes here passing in that additional function survey list is going to have some updates okay all right look at that um wait wait I saw it for a second where'd it go no H okay I think something is happening with let me okay so this looks good but when I refresh it all disappears so I think there's some issue with my user id maybe it's logging me in as Anonymous at first first loading the list and then not showing me so let me go ahead and try to fix that you're correct in your assessment that's what I I like to hear all right so I think it's because yeah all right awesome now when I refresh I see all of my surveys amazing oh I need some kind of back button actually this seems like a good time to add routing to the app because I can't go back to the survey list and that's something that feels intuitively like it should be possible I will also add a button here and then when users take the survey I'm going to need a separate URL there to to be able to resolve it to a particular survey so let's go ahead and add routing to our project now all right we're going to add react routing and that's dramatically simplifying the logic here is pretty nice okay but when I scroll down I see that it is making a mistake here so I'm going to not accept that change handle new survey do I still need that I don't think I do I think that new survey is going to be in the survey list now so I think I can accept the rest of this I will go to survey list yes we we got that there now okay okay now we're using the parameter survey ID okay now I think I also need to actually install um the react router I don't know if it's a native module oh looks like it also removed all of our Google off stuff here so that's that's a problem as well I'm going to copy that move forward I like using you know control Z and control shift Z to be able to just see the changes it's really helpful okay use State and use effect not in survey list sure let's add that okay yep and now it's react router Dom not in the server go to the UI okay okay so when we arrive here it's just the survey now let's click on this one okay slash undefined well that's not good um but I can go back now which is an improvement if I click a new survey okay that looks like it worked correctly okay I saved that let's go back there's my okay but it's undefined so we need to when we click on this we need to pass the ID properly and that's still an issue the context here is already getting screwed up because it forgot some of the Imports so I'm going to start a new chat all right we're going to ask it to troubleshoot this and make sure we're getting the ID oh yeah okay it's responding with underscore ID instead of survey ID that's pretty simple there we go okay Tada okay great but you know what we want to fill in these values when we go to this kind of page so let's do that oh I think we don't have an endpoint right now to get a specific survey and hydrate the survey designer so we're going to have to add a new end point for that okay here we go we're getting a specific survey now that's good new database logic good got to actually call the endpoint and then fill in the details when we get one [Music] that doesn't look like it's quite working okay there's some issue here get survey not defined uh it's another import issue all right there we go okay so if I go now to the base URL it shows me the survey list if I click on this perfect it shows me this all right let's add some um some questions here okay we'll save that now we'll go to our list it looks like it knows we have three questions I open it yes we got our question list amazing amazing amazing okay so we got routes now um and we can go and retrieve the particular survey I'm curious if I open this in an incognito window if it'll show me that survey it will not it will go to because it's not the user right so we see that our security is working there and if we just go to the base URL we only see a new survey button because this Anonymous user doesn't have any surveys yet so our survey list is ready our designer looks pretty good next let's add the ability to send these surveys out and collect the responses for that I think we're going to need to structure our questions a little bit better so that we can use the IDS of the questions as keys in the responses that will allow us to match the questions to the an when we go to analyze the responses so let's take the question designer and then also tag a couple of other files and modify the structure of our questions so that they have an ID so that we can reference them later okay I'm going to give a try running this across the codebase and just see if it's able to identify all of the relevant files okay adding an ID here that makes total sense then ins servey designer that actually looks the same question preview okay yep having an ID there makes sense survey preview looks like this is a pretty good idea because it's actually simplifying the code across a number of different files here I'm not sure about that we should be setting all of the IDS okay I see it's setting an ID in case there isn't one already set actually I think this is overly precautious I'm going to leave it as it was uh and then just delete my old surveys we're going to need to add you U ID and the server I think we already have that yeah we do and then U ID for the UI yeah okay let's go to the UI npm okay we'll add uu ID there theoretically that should be everything and yeah I'm just going to delete all of my surveys okay so we'll go back and we'll create our first ever survey all right so we got this survey and let's save it all right saved let's check the database cool so now each of our questions have IDs looks like we're also saving this text oh right the text is the actual question okay we might consider for options to have IDs but I think that's over complicating it for the moment so I'll just leave it like that that's pretty cool so it was able actually to find all of the different files when I ran across the codebase and I think that's because my codebase just isn't very large right now so it was able to find the relevant ones okay let's go back to appjs actually let's go to survey preview and we'll say this we're going to actually create the survey taker experience okay we'll actually start small and I'm not going to have it build out all the end points at first because I think it'll just be too much context for it to handle I'm going to ask it to create the survey viewer okay created new file pasted the contents let's create the question viewer component okay sure that makes sense and then we're going to update appjs all right we got the new rout route I don't know okay so now theoretically if I just go to s slash that uh okay well it's got a sample survey for me that's fine we're going to go ahead and make it retrieve the actual survey okay okay we're going to have it actually retrieve the survey oh okay it's uh it's using fetch right in line here we need to tell it about um the server com file looks like this question viewer is assuming some different question types that are not really there so let's change that okay there we go let's see what this looks like okay fantastic this is basically that survey that I created right we can provide an answer and then we can submit it but we're going to need to actually create the endpoint to submit that so let's do that now I'm actually looking at question viewer and question preview they're pretty much the same I just feel like we could avoid some of the details and then H let's merge question viewer and question preview into a single component that receives prop okay we'll merge those two components real quick I think that'll cleaner question display yeah I kind of like that question display okay we'll go to survey preview we'll use the question display it's using is preview as the flag that looks good to me excellent now we can just uh now we can delete these two files okay cool now let's go ahead and add the logic to submit the survey okay another full stack update we're going to add a new endpoint update the database we're going to update the way that we communicate with the server and then actually use that function here why they use navigate oh okay this is going to redirect you okay sure that's fine how it's failing to load the survey uh something went wrong there H index okay get survey is not a function I think it messed up the DB update yeah it somehow deleted it okay let's go ahead and undo the changes to DB and we'll see okay one problem is it's supposed to be just for that user ID so we're going to have to modify that yeah I think we should just keep it like that with the survey ID not restricted by the user so we can actually see the survey okay it's having an issue retrieving it for some reason maybe it also screwed up the changes um here well that looks good okay I guess we oh okay there we go it was um a parameter issue okay now when we go here what the the check boxes aren't working okay that's annoying and I deleted the working checkbox I think does it work when I configure the survey [Music] no um this is an issue because I deleted those other files so let's look at what I had in question viewer over here hey look at that actually all of this is broken now H that's a real bummer okay but now it works here at least okay so it does work there we just need to make it work again in the survey preview okay it was using the index it was when we added the IDS I think we broke it okay there we go great so when I configure it I can set something and then when I'm taking the survey Let's uh let's go ahead and submit it see what happens survey submitted successfully okay now it's taking me back to this page which is totally fine let's take a look at our resp responses collection all right awesome look at that we got answers for all of the different questions fantastic and got a little submitted at got the survey ID excellent okay now I want to see at least the number of responses here and I also want to limit the responses to one per user and I'm going to use that anonymous user here so that it's not going to be perfect like you can still open an incognito window and take it again but I think this is the way most survey platforms would actually work unless you're doing something like verifying their email which is a little bit out of scope for the project I'm working on here so let's go ahead and add a number of responses here and then we'll start working on the analytics dashboard tagging the relevant files all right nice look at that we got one response actually let me limit it to one per user looks like we didn't submit a user ID so that'll have to be added to this okay so it's a pretty hefty re request here but we'll see how it does okay it's adding the new has submitted response endpoint and we're including the response I um and we're including the user ID here as well all right looks good new endpoint used in server com cool okay okay okay that looked pretty good on the surface let's see what happens if we go here because I already submitted it um okay it failed to load the survey my response did not have that um initially but we could also have mess something up okay has User submitted response not defined Maybe we have to modify server right the the response uh we'll delete that first response thank you for your response okay that's great if I go here again awesome this is what it's telling me right but if I go to this in an incognito window I should be able to uh oh okay failed to load survey I wonder why it's probably about my user ID yeah we we shouldn't care about user ID anymore though H must be this new end point that's not working let's just see if it's actually calling that end point well in that case yes U but what about in this case no it's not H okay um you know what I think it's when we go to the survey yeah it's when we go to the root directly instead of going to the base I don't know if we're signing in or not user not authenticated but let's see if I go here first and then I go here no still an issue okay looks like at some point our Anonymous user thing stopped working here yeah okay at some point that got removed so let's go ahead and add it back all right there we go now when we go to this we are Anonymous but we can submit an answer okay thank you for the response if I refresh I've already taken it right so now if I close that and I go I go to this again it'll be a new session so I should be able yeah I can take it again perfect okay and now we got two responses to that survey amazing the cool thing is since I added IDs I could still move these around and then all my analytics are going to work properly speaking of which let's go ahead and work on the analytics dashboard for this now that I think about it my questions don't really have numeric things which I want to show on the dashboard so let me go ahead and add a new question type here that's going to be some kind of number question designer and then in question display oh you know what let's just not worry about that right now okay if I type letters it doesn't work but if I type numbers it does let's just say I'm 75 okay we save the survey wait what invalid numeric questions okay it's cuz we don't have any of this min max thing yeah let's just not do that cool okay this way I'll have some fields that I could more easily put on a graph that's going to show like some kind of trend line or something like that let's create a new component called survey analytics that will we're just going to go for a really open-ended thing to see what it does for us and then when we see what it does we'll kind of hone in on a more specific so let's see what it okay we're going to use recharts sounds good okay this is going to be our survey analytics component okay we're going to allow to open that page um I actually want to use routing rather than uh this okay so I'm just going to control Z remove that okay we got to have a new route got a new end point for getting all the survey responses in an aggregate way well actually it looks like it's not doing it in an aggregate way but we'll definitely want to do that eventually yeah right now it's just getting all of the survey responses um we're going to want to do some aggregation and I know that it's not importing it there we go oh that's in the survey list okay um H why not okay let's see question type what's what's your name let's see h okay so it's not a very meaningful uh meaningful chart so far let me go ahead and give it the example of my data so that it maybe has a better idea of how to hook all of this together okay please update this component to work with these data structures H okay there we go that's a little better okay let's take the survey another time so now it's able to show that now this isn't very uh good production approach of course because we're just shuttling the entire response set to the UI so we're going to have to think about how we do that for various widgets so maybe we actually have a dashboard designer View and then the actual dashboard with the view of the data that way we know how we're going to present it and then when we're presenting it we're going to actually pull the data in an aggregate way so that we're not pulling all of the responses into the UI at once okay so let's go ahead and change this to be like a dashboard designer sort of thing and then we will have the dashboard with the actual data on it okay so we want to shift the way we do analytics we'll now have a dashboard designer and this current component that we're on will become the widget designer we'll follow a similar structure to what we do when we create questions and add them to the survey and I'm tagging all these files so it has an idea of what I'm talking about and then let's add a dashboard view component as well okay this is our dashboard designer We'll add a new component this is our widget [Music] designer which the survey analytics becomes I think me to just double check yeah and then this is our dashboard view the dashboard designer is what we actually want to show I think in appjs okay just using auto complete there all right let's see fetch dashboard okay trying to do some kind of fetch dashboard thing okay um H well you know there's a lot of context here because it just created multiple files and I'm referencing multiple files here so I'm going to open a new chat to sort of reset that and have it correct the new files that it created just copy pasting the bugs and then I'll also attach the server com for context okay so it's let's update okay sure I guess we got a new end point here what do we need this survey questions for I'm not sure that this is a useful end point because we already have a get survey endpoint is going to return the full survey so I'm not going to accept that change and let's go create a new file widget display in the components oh yeah I guess that makes sense because we have like this question display but we never had a widget display yeah okay uh yeah we don't need a survey questions let's use the get survey end point instead okay sure we're basically getting the survey questions and then okay yeah there's 's the widget designer do we need to change anything in index I don't think so okay yeah there's no fetch dashboard though okay it's getting some info for this dashboard I guess that's fine let's just see okay wow when I switch to this okay that looks pretty neat um it looks very similar to that other layout so let's go back and see okay if I look for this survey I go to anal okay the analyze responses doesn't do anything so that's first problem if I click here okay that goes there but then we got some errors let's see any more detail where is that happening oh it's trying okay dashboard view okay and dashboard view it's cool that it tried to add some drag and drop already for us we're going to be able to move these widgets around that's awesome okay yeah it's basically just setting the default to an empty array so if we don't have any widgets yeah okay all right my first survey um let's see which option do you like and we'll do a bar chart and then okay preve widgets is not iterable and this stuff can be really intimidating but you just got to roll forward and just keep trying to figure it out at this point I've made like five new files it's going to be way too difficult for me to go back and try to redo my analytics so it's much easier to just figure out these errors and keep moving forward and you'll find yourself much further ahead than you would expect so I'm going to go ahead and copy that actually I want to preview okay so first I just want to be able to preview a widget as well okay okay yep was about the dragon drop okay that's not really what I wanted to see though oh looks like we lost the widget rendering at some point when we uh iterated and made all those additional changes so okay it added a bunch of dummy data but we want to use actual data okay so I'll just say but we want to use the actual data from our survey for the particular question and I'll give it an example of my responses okay filtering yeah that makes makes a lot of sense I like this filter that it added because now it's going to narrow it down to um the answers that actually have an answer for that particular question H okay looks like it's it's talking about using a different Library this time instead of recharts it is trying to use chartjs 2 let me compare that real quick let me switch to charts js2 just kind of curious to see what that looks like I'm going to go to package and just remove this is the wrong package package we'll remove recharts then npm install okay ah bones. filter is not a function that's back in that server comom okay now it's just okay it's just getting the responses I mean I guess that's fine oh hey look at that I like this that's a pretty nice chart wow I really like the visualization here very cool okay now when we try to add the widget we still get this issue so let's go ahead and fix that that's on the dashboard designer [Music] okay oh it had a couple of changes I guess okay that's fine very cool but that's uh taking up the entire thing okay that's kind of funny looking let's let's screenshot that and then we'll figure out what's the styling problem there okay I'm attaching the image to give it an idea of what is happening visually and I'll also tag the widget display which is probably the where the issue is fixed height set on the chart container okay okay hey look at that that look looking really nice let's see if I add another one okay I think this line chart is maybe not working really well with with this H let me take the survey again so I'll give another okay let me tell it about the line chart being weird okay it's going to make some changes for the line charts actually is that what I yeah actually I guess that kind of makes sense um oh let me go and I'm going to want to block anonymous users from being able to see the analytics for that dashboard okay nice look at that cool now we're getting some cool widgets in here okay let's try to save it I'm not sure if that did anything okay we'll go back to okay we'll have it make the full stack change and make the button work kind of like we have in the survey designer as well okay I'm not sure why it just deleted this get survey responses uh end point okay I'll just accept it for now and then we'll get it back in there in a minute wait what I'm just going to copy that I'm a little concerned about this change but we'll see we'll see what happens saving save failed okay why is that get dashboard is not defin keeps forgetting to reference the file import oh we do still have the survey responses okay never mind okay it's saved wonder where it saved it too is there is there new dashboards collection yeah there is okay okay uh looking at the dashboard here awesome look at that it it stores the question ID and the survey ID um the title for the chart and then that's our list of widgets that's fantastic now we're going to want to open that dashboard whenever we go to the analytics page for that oh look at that it actually already Works yes okay amazing amazing so now we get to see that and so let me go ahead and add an maybe a pie chart of favorite option okay can we drag it oh yeah sweet we we got drag and drop okay we'll save this dashboard let's go ahead and answer the question again and we will answer C this time oh well this is nice right it's not showing us the widget for this dashboard because we're not the user but we should really just redirect completely when we go here like if I go SLS survey interesting yeah I'm not going to be I shouldn't be able to save it but I shouldn't be able to see this either um I'll fix that in just a second but let's submit another answer with a and if we refresh this oh whoops I put another one in a okay great but hey you can actually see that it is um it's reflecting the latest data now so we can see on these widgets it's using the latest responses so let's say for for the question here I'll say great and I'll pick B this time okay there we go we see this reflected um we got another answer in B here so this is a simple dashboard right now I can obviously continue to improve it I can add new widgets I do want to eventually add some filtering and things like that but I think this is a pretty good place to wrap this up actually let's do one last thing let's go ahead and make it so that a random user can't see this and can't see that survey editing uh option either okay got a new survey access endpoint just delete some of these comments okay let's see okay so that's not working for me right now because I'm an authorized user and I should be able to see this one I'm basically just asking it to double check its work this is probably not the cleanest way to extract that ID but let's give it a try H okay I see it for a fraction of a second but then it brings me back here I'll start a new chat to clear the context okay uh oh did it not actually have any changes uh no I don't want to allow access if it's an anonymous user that's actually absolutely not what I want to do okay so basically it seems really certain that this should work uh let me let me double check and see what is going on here fundamentally okay so for protected route so we're doing this kind of okay so we're wrapping does this work like that don't I have to yeah don't I have to do that this is a confusing implementation this seems actually even more complicated I'm a little worried but I'll give it a try I guess I don't know okay let's let's just try it hooks use authorization. JS okay and now it's using a new router oh boy yeah I think I'm yeah I'm going to have to go back back back back on undo undo can go all the way back yes to these routes and I'm just going to think for myself and I'm just going to design a solution without AI for a minute um okay so when it goes to those paths all I really need to do let me delete this hooks okay all I really need to do is check on first load if it's the right user it created those endpoints for me and then if it's not that user I'm going to redirect them to home so okay if I go here that's great um so let's go please check for okay so my user can see it but can the anonymous one no they cannot okay see there it is here's the thing right how long did I just spend uh working with AI to try to make this work and and it just didn't right I mean I was just spinning my wheels but when I got to it it was pretty quick so you do still end up in those traps sometimes where it's easier to just think about it for yourself and then implement the solution let's go ahead and do the similar thing and and let me just read through this to make sure kind of makes sense we're doing it here still in appjs so let's take that same approach now we're going to ask it to take the same approach and make a generic function to make it a protected route and then it'll use that in both of those cases I think this is kind of the protected route thing that it was going for before Yeah we actually don't need this dashboard access we can use the same thing okay I can see my survey and some random user cannot and they can't see my analytics either amazing okay we'll just kind of okay um oh we need a little button here that says copy survey link okay we're going to copy it to clipboard then we're going to show a little toast that says copied copy link there's the button okay copied the clipboard and now if we go to that URL awesome okay submitted a response let's check out the okay we got to fix the analytics button yeah that's pretty straightforward okay let's add a little widget all right cool now if we go and add a new response we can see it update all right there it is uh I think this is a pretty decent place to stop we built a survey Builder we built an analytics dashboard we added security there's a ton of stuff here I originally wanted to also make it so that you could use AI to uh customize the questions based on what you looking for but I think this video video is already really long so I'm going to save that for another video where I'll show you how to enhance an existing product like this with AI so that you can actually make it a part of your product okay so before I get this deployed there's one little missing piece which is just having a logo and this is what I like to do nowadays you can go to your favorite image generator and just get a logo out of there there's some icon generating Services um I don't think they're absolutely necessary let's just do it here okay that doesn't look too bad I think I'll go with it so unfortunately at this point the audio portion of my recording got really messed up so I'm doing this voice over now for the Remer of the video so here I'm just removing the background from the image and I'm going to create a favicon which is the little icon that displays when you go to a particular website this will also act as the logo for my app this is the website that I like to use because you can just upload an image and it will generate the favicon as well as other sizes that you might want to have in your public assets folder generate the package and then I'm going to download it we'll just take all the files in there and then go and find our public assets folder in the UI portion of the project and go ahead and paste and replace anything that was already there now I'm just going to rename a couple of these images to what is sort of default in react and this way things will just work out of the box all right you can see it in the top there it has the little icon I also want to use it in my nav bar in the top left so here I'm just adding the logo to my source and there it is on the top left and I spent a little bit of extra time just making it the right size and color so that's the final version of the Navar right there next up I'm going to modify the index.html file and what I want to do here is set all of the different properties so that when a website renders a preview for my website it is going to look nice and proper it's not just going to be a blank sort of URL uh with some mystery it's going to have you know the logo displaying it's going to have a title a description this is going to help any website that's going to share a link to mine we don't want it to just say create react app updating the logo URLs there okay and now I'm ready to actually deploy I'm going to be using cloudflare Pages for the first time and the way that I would like to deploy it is using the CLI I did some research and figured out that this Wrangler CLI or command line interface is the most practical way to actually deploy it but before I do that I want to actually build the app and one tip that I share here is that you should set this generate Source map flag to false when you run the build so that you're not exposing your unobfuscated version of your JavaScript publicly I mean JavaScript is always public so somebody could potentially unscramble it and see your code and that's fine that's how every website in the world works but I do like to just make it uh obfuscated and make it so that it's harder for somebody to figure out exactly how your application works so I update the build command there and then we're going to go ahead and run the build script you'll see that it built everything into that build folder and that is the public public version of our application that we'll be able to serve on cloud flare pages one little thing I note here is that I am currently pointing to Local Host so that's going to be calling my own computer and not the actual server because we haven't actually deployed the server yet like I said I wanted to use Wrangler but this was my first time working with it so I asked uh cursor how to do that and I have to say this was a really smooth process actually right here I do Wrangler login so we have this browser driven authentication which is super nice now the command line knows who I am so it'll be able to deploy to my project here's the deployment command and I'm specifying the project that I want to deploy to okay looks like there was an issue I think I also needed to configure this toml file so let's go ahead and create that this effectively is the configuration that cloud flare Pages the regular CLI is going to use to deploy the application and then I had to get this account ID and I searched for it for a little while but eventually I found it on the cloud flare website if you go to workers and Pages overview and then you'll actually see it right there on the right it's the account ID so you can copy paste it there okay let's try to do the deploy command again cool so this time it actually worked going to the link it didn't quite render what I was expecting but if I go back to Cloud flare pages and find my project and then I go to visit it and there it is this is uh the original deployment and it was really smooth as you saw uh I pretty much showed you all of the steps that you need to deploy the actual front end but keep in mind this is just the front end so we still need to deploy the server which has the API and all of the database communication and we'll do that separately we're going to use uh Google app engine for that but for now it's pretty cool to see that the page just works here I'm linking it to the domain that I bought way at the beginning of this video and again this was pretty smooth so because I used the cloudflare registar it already had all the DNS records configured properly so I just go to this custom domains page uh type in the name and enter and it initializes and then pretty quickly becomes available this makes it so that my website isn't just deployed on you know survey Mage pages. deev or whatever it is but it's actually using the survey Mage docomo name that I registered with cloudflare okay there we go with actually see it on survey magecomp those differently so just whenever you add custom domains pretty much anywhere just add both of those okay time to switch over to Google app engine and I'll be honest like I've been using this product for a while but when I was recording this video it was an absolute nightmare and I ended up spending like half an hour reading Google Docs and figuring out why I was having some permissions issues with the project uh it was definitely a mess ultimately I do use Google app engine because it allows me to control cost and the degree to which my application scales but it was um it was difficult here I'll make a separate video talking about it and maybe some alternative backend deployment services that are good options looking back in the code editor here we see the app.yaml which is the control file which controls how the Google app engine app is deployed and here I'm using the gcloud command line interface to actually deploy that app again you will need to download that from Google's website and then authenticate in a similar way to cloudflare Pages uh and then use the command line interface to select the project you want to work with and then deploy to that project uh specifying all of your parameters in this yaml file all right so it looks like it deployed but then when I go to services in the version there's some additional errors so again uh deploying the back end on Google app engine was not the simplest I ended up in the logs uh trying to figure out what was wrong in this case it was actually my fault because I didn't include an a start command in my package.json which is how Google app engine knows how to actually start your application so I'm going to go back and add that here okay let's try to do g-cloud app deploy again conf confirm where it's going and you'll see by the way the URL there that uc. r. appspot or whatever that's going to be the public server URL that you can use and your UI should be pointed to that instead of Local Host so I'm going back to the UI code the sercom which again is a central point at which I communicate with the server and I'm going to update the base URL there so that it's calling the official uh API rather than Local Host I'm going to rebuild the application and then deploy it with the proper base URL okay there's the build awesome okay so it's deployed and the Google Cloud deployment also finished we see here when I go to the base URL it cannot get slash because we don't have an API route defined there but the fact that it's giving me that response instead of server unavailable is a good sign because it means that the app was actually deployed because that's Express sending that response all right now when we go to the final product uh we see here we're on survey.com we are able to add some questions to our survey and we should have pretty much a functional product so if we if we save the survey oh I wasn't logged in here so let me go ahead log in and uh when I do I actually see those surveys that I had previously created so we can see that it's um calling you know the official API we are getting the details about those surveys and that's pretty much the whole product so that's it for this app but let me know in the comments below if there are any topics you'd like to see me make more videos about thanks for watching and I'll see you in the next one